/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/auth/register": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Register
     * @description Register
     */
    post: operations["AuthService_Register"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/auth/login": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Login
     * @description Login
     */
    post: operations["AuthService_Login"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/auth/profile": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get Profile
     * @description Get Profile
     */
    get: operations["AuthService_GetProfile"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    v1ErrorResponse: {
      /** Format: int32 */
      statusCode?: number;
      message?: string;
    };
    registerPayload: {
      username?: string;
      password?: string;
      role?: string;
    };
    registerData: components["schemas"]["registerPayload"];
    registerResponse: components["schemas"]["registerData"];
    loginPayload: {
      username?: string;
      password?: string;
    };
    loginData: {
      token?: string;
    };
    loginResponse: components["schemas"]["loginData"];
    profileResponse: {
      id?: string;
      username?: string;
      role?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  AuthService_Register: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["registerPayload"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["registerResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["v1ErrorResponse"];
        };
      };
    };
  };
  AuthService_Login: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["loginPayload"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["loginResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["v1ErrorResponse"];
        };
      };
    };
  };
  AuthService_GetProfile: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["profileResponse"];
        };
      };
      /** @description Internal Server Error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["v1ErrorResponse"];
        };
      };
    };
  };
}

export type V1ErrorResponse = components["schemas"]["v1ErrorResponse"];
export type ProfileResponse = components["schemas"]["profileResponse"];
export type RegisterResponse = components["schemas"]["registerResponse"];
export type LoginResponse = components["schemas"]["loginResponse"];

export type RegisterData = components["schemas"]["registerData"];
export type LoginData = components["schemas"]["loginData"];

export type RegisterPayload = components["schemas"]["registerPayload"];
export type LoginPayload = components["schemas"]["loginPayload"];
